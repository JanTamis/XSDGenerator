<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
		<!-- 👇 Source generators must target netstandard 2.0 -->
		<TargetFramework>netstandard2.0</TargetFramework>
		<!-- 👇 We don't want to reference the source generator dll directly in consuming projects -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<!-- 👇 New project, why not! -->
		<Nullable>enable</Nullable>
		<ImplicitUsings>true</ImplicitUsings>
		<!-- 👇 Source generators must target netstandard 2.0 -->
    <TargetFramework>netstandard2.0</TargetFramework> 
    <!-- 👇 We don't want to reference the source generator dll directly in consuming projects -->
    <IncludeBuildOutput>false</IncludeBuildOutput> 
    <!-- 👇 New project, why not! -->
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
    <LangVersion>Latest</LangVersion>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<IsRoslynComponent>true</IsRoslynComponent>
	</PropertyGroup>

	

	<!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>
	<ItemGroup>
	  <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
	    <PrivateAssets>all</PrivateAssets>
	    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
	  <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0" />
	</ItemGroup>
</Project>
